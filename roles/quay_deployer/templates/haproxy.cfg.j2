#---------------------------------------------------------------------
# PLEASE READ
# This is an autogenerated configuration file
# - please use the ansible job to update instead of manually
#   changing this file
#---------------------------------------------------------------------
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    #ssl-default-bind-ciphers PROFILE=SYSTEM
    #ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend quay_http_fe
    bind {{ haproxy_host_vip | default('*') }}:80

    default_backend quay_http_be

frontend quay_https_fe
    bind {{ haproxy_host_vip | default('*') }}:443
    mode tcp

    default_backend quay_https_be

frontend redis_fe
    bind {{ haproxy_host_vip | default('*') }}:6379
    mode tcp

    default_backend redis_be


backend quay_http_be
    balance roundrobin

    {% for host in groups.quay_enterprise %}
    server quay_http_{{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:80 check
    {% endfor %}

backend quay_https_be
    mode tcp
    balance roundrobin
    option httpchk GET /health/instance
    http-check expect status 200

    {% for host in groups.quay_enterprise %}
    server quay_https_{{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:443 check check-ssl verify none
    {% endfor %}

backend redis_be
    mode tcp
    option tcp-check
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    {% for host in groups.redis %}
    server redis_{{ hostvars[host]['inventory_hostname'] }} {{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:6379 check inter 1s
    {% endfor %}
    

frontend lb_stats_fe
    bind {{ haproxy_host_vip | default('*') }}:8080

    default_backend lb_stats_be


backend lb_stats_be
    mode http
    stats enable
    stats uri /stats
    stats realm Haproxy\ Statistics
    stats auth {{ haproxy_stats_username if haproxy_stats_username is defined else 'admin' }}:{{ haproxy_stats_password if haproxy_stats_password is defined else 'admin' }}