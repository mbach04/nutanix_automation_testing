- name: add insecure registry option to docker
  template:
    src: "daemon.json.j2"
    dest:  "{{ repo_docker_config_path }}"

- name: start and enable docker
  systemd:
    name: docker
    state: started
    daemon-reload: yes
    enabled: yes

#- name: create dir for docker-py
#  file:
#    state: directory
#    path: /tmp/docker-py
#    mode: 777

#- name: unpack docker-py if not already installed
#  unarchive:
#    src: "files/{{ dockerpytar }}"
#    dest: /tmp/docker-py

- name: Install pip from epel repo
  yum:
    name: "python-pip"
    enablerepo: "epel"

- name: use pip to install docker-py
  shell: "pip install docker"
  register: dockerpy

- name: set selinux context for docker directory
  file:
    path: "{{ repo_dir_docker }}"
    setype: svirt_sandbox_file_t
    state: directory

- name: pull docker registry image
  docker_image:
    name: "registry"

- name: is the registry already up and running?
  shell: docker ps | grep ocp-local-registry
  register: dockerregstatus
  failed_when: "'ERROR' in dockerregstatus.stderr"

#- name: start docker registry container if it's not already running
#  shell: "docker run -dit -v /tmp/ocp_images:/var/lib/registry -p 5000:5000 --name ocp-local-registry {{ dockerregistryimage }}"
#  when: dockerregstatus.stdout == ""

## worked on centos7 but not rhel7; need to investigate; the code block immediately preceeding is a functional equivalent
- name: start registry container
  docker_container:
    name: ocp-local-registry
    image: "registry"
    ports:
    - "5000:5000"
    volumes:
    - "{{ repo_dir_docker }}:/var/lib/registry"

- name: authenticate to registry.access.redhat.com
  shell: "docker login registry.access.redhat.com -u {{ repo_rhsm_user }} -p {{ repo_rhsm_password }}"

- name: pull openshift images from red hat and push to local docker registry container
  docker_image:
    name: "registry.access.redhat.com/{{ item }}"
    repository:  "{{ inventory_hostname }}:5000/{{ item }}"
    push: yes
  with_items:
  - "{{ repo_openshift_images }}"

## requires proper authentication; was unable to test because my rhn account only works with access not connect
#- name: authenticate to registry.connect.redhat.com
#  shell: "docker login registry.connect.redhat.com -u {{ rhn_user }} -p {{ rhn_password }}"

#- name: pull nexus images from red hat and push to local docker registry container
#  docker_image:
#    name: "registry.connect.redhat.com/{{ item }}"
#    repository:  "{{ inventory_hostname }}:5000/{{ item }}"
#    push: yes
#  with_items:
#  - "{{ nexus_images }}"

- name: pull quay and coreos images from docker and push to local docker registry container
  docker_image:
    name: "{{ item }}"
    repository:  "{{ inventory_hostname }}:5000/{{ item }}"
    push: yes
  with_items:
  - "{{ repo_quay_coreos_images }}"
