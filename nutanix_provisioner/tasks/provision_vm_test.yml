- name: Create a basic VM (test)
  uri:
    url: "{{ api_v3 }}/vms"
    # body: "{{ lookup('file','vm-def.json') }}"
    # Probably best to move this into a template for reusability
    body:
      api_version: '3.0'
      metadata:
        kind: vm
      spec:
        cluster_reference:
          kind: cluster
          uuid: "{{ cluster_uuid }}"
        name: automation-test
        resources:
          memory_size_mib: 1024
          nic_list:
          - subnet_reference:
              kind: subnet
              uuid: 3684e505-7f21-4ee2-8550-cc34b1908de7
          disk_list:
          - data_source_reference:
              kind: image
              uuid: "{{ rhel_kvm_image }}"
            device_properties:
              device_type: DISK
          num_sockets: 1
          num_vcpus_per_socket: 1
          power_state: 'ON'
          guest_customization:
             cloud_init:
               user_data: "{{ lookup('template','cloud-init') | b64encode }}"
    method: POST
    validate_certs: no
    force_basic_auth: yes
    body_format: json
    user: "{{ prism_user }}"
    password: "{{ prism_password }}"
    status_code: 202
  register: json_create_result

- name: Display vm creation response
  debug:
    var: json_create_result.json

- name: Register the task uuid so we can reference this VM directly later
  set_fact:
    test_vm_uuid: "{{ json_create_result.json.status.execution_context.task_uuid }}"

- debug:
    var: test_vm_uuid